{"version":3,"sources":["components/Profile/Profile.js","components/FriendList/FriendListItem.js","components/FriendList/FriendList.js","App.js","index.js"],"names":["console","log","PropTypes","Profile","username","tag","location","avatar","stats","className","src","alt","followers","views","likes","FriendListItem","name","isOnline","width","FriendList","friends","map","friend","id","prototype","arrayOf","shape","string","isRequired","App","user","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"+jCAaAA,QAAQC,IAAIC,KAEZ,IAoCeC,EApCC,SAAC,GAAgD,IAA9CC,EAA6C,EAA7CA,SAAUC,EAAmC,EAAnCA,IAAKC,EAA8B,EAA9BA,SAAUC,EAAoB,EAApBA,OAAQC,EAAY,EAAZA,MAClD,OACE,sBAAKC,UAAU,UAAf,UACE,sBAAKA,UAAU,cAAf,UACE,qBAAKC,IAAKH,EAAQI,IAAI,cAAcF,UAAU,WAC9C,mBAAGA,UAAU,OAAb,SAAqBL,IACrB,oBAAGK,UAAU,MAAb,cAAqBJ,KACrB,mBAAGI,UAAU,WAAb,SAAyBH,OAG3B,qBAAIG,UAAU,QAAd,UACE,+BACE,sBAAMA,UAAU,QAAhB,uBACA,sBAAMA,UAAU,WAAhB,SAA4BD,EAAMI,eAEpC,+BACE,sBAAMH,UAAU,QAAhB,mBACA,sBAAMA,UAAU,WAAhB,SAA4BD,EAAMK,WAEpC,+BACE,sBAAMJ,UAAU,QAAhB,mBACA,sBAAMA,UAAU,WAAhB,SAA4BD,EAAMM,kB,cCrB7BC,EAdQ,SAAC,GAAD,IAAGR,EAAH,EAAGA,OAAQS,EAAX,EAAWA,KAAX,EAAiBC,SAAjB,OACrB,qCACE,sBAAMR,UAAU,WAChB,qBAAKA,UAAU,SAASC,IAAKH,EAAQI,IAAKK,EAAME,MAAM,OACtD,mBAAGT,UAAU,OAAb,SAAqBO,QCqBnBG,EAAa,SAAC,GAAiB,IAAfC,EAAc,EAAdA,QACpB,OACE,oBAAIX,UAAU,cAAd,SACGW,EAAQC,KAAI,SAACC,GAAD,OACX,oBAAoBb,UAAU,OAA9B,SACE,cAAC,EAAD,CACEF,OAAQe,EAAOf,OACfS,KAAMM,EAAON,KACbC,SAAUK,EAAOL,YAJZK,EAAOC,UAWxBJ,EAAWK,UAAY,CACrBJ,QAASlB,IAAUuB,QACjBvB,IAAUwB,MAAM,CAAEH,GAAIrB,IAAUyB,OAAOC,eAI5BT,QCZAU,MA7Bf,WACE,OACE,qBAAKpB,UAAU,MAAf,SACE,yBAAQA,UAAU,aAAlB,UACE,cAAC,EAAD,CACEL,SAAU0B,EAAK1B,SACfC,IAAKyB,EAAKzB,IACVC,SAAUwB,EAAKxB,SACfC,OAAQuB,EAAKvB,OACbC,MAAOsB,EAAKtB,QAEd,cAAC,EAAD,CAAYY,QAASA,UCX7BW,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.3f6fb961.chunk.js","sourcesContent":["// Компонент должен принимать несколько пропсов с информацией о пользователе:\r\n\r\n// username — имя пользователя\r\n// tag — тег в социальной сети без @\r\n// location — город и страна\r\n// avatar — ссылка на изображение\r\n// stats — объект с информацией об активности\r\n// Компонент должен создавать DOM элемент следующей структуры.\r\n\r\nimport PropTypes from \"prop-types\";\r\n// import s from \"./Profile.module.scss\";\r\n// console.log(s);\r\n\r\nconsole.log(PropTypes);\r\n\r\nconst Profile = ({ username, tag, location, avatar, stats }) => {\r\n  return (\r\n    <div className=\"profile\">\r\n      <div className=\"description\">\r\n        <img src={avatar} alt=\"User avatar\" className=\"avatar\" />\r\n        <p className=\"name\">{username}</p>\r\n        <p className=\"tag\">@{tag}</p>\r\n        <p className=\"location\">{location}</p>\r\n      </div>\r\n\r\n      <ul className=\"stats\">\r\n        <li>\r\n          <span className=\"label\">Followers</span>\r\n          <span className=\"quantity\">{stats.followers}</span>\r\n        </li>\r\n        <li>\r\n          <span className=\"label\">Views</span>\r\n          <span className=\"quantity\">{stats.views}</span>\r\n        </li>\r\n        <li>\r\n          <span className=\"label\">Likes</span>\r\n          <span className=\"quantity\">{stats.likes}</span>\r\n        </li>\r\n      </ul>\r\n    </div>\r\n  );\r\n};\r\n\r\nProfile.propTypes = {\r\n  avatar: PropTypes.string,\r\n  name: PropTypes.string.isRequired,\r\n  tag: PropTypes.string.isRequired,\r\n  location: PropTypes.string.isRequired,\r\n  stats: PropTypes.objectOf(PropTypes.number).isRequired,\r\n};\r\n\r\nexport default Profile;\r\n","import PropTypes from \"prop-types\";\r\nconst FriendListItem = ({ avatar, name, isOnline }) => (\r\n  <>\r\n    <span className=\"status\"></span>\r\n    <img className=\"avatar\" src={avatar} alt={name} width=\"60\" />\r\n    <p className=\"name\">{name}</p>\r\n  </>\r\n);\r\n\r\nFriendListItem.propTypes = {\r\n  avatar: PropTypes.string,\r\n  name: PropTypes.string.isRequired,\r\n  isOnline: PropTypes.bool,\r\n};\r\n\r\nexport default FriendListItem;\r\n","// Компонент должен принимать один проп friends - массив объектов друзей.\r\n\r\n// Компонент должен создавать DOM следующей структуры.\r\n\r\n// <ul class=\"friend-list\">\r\n//   <!-- Произвольное кол-во FriendListItem -->\r\n// </ul>\r\n// Описание компонента <FriendListItem>\r\n// Компонент должен принимать несколько пропов:\r\n\r\n// avatar - ссылка на аватар\r\n// name - имя друга\r\n// isOnline - буль сигнализирующий о состоянии друга, в сети или нет.\r\n// В зависимости от пропа isOnline, должен меняться цвет фона span.status. Это можно сделать через разный CSS-класс или Styled Components.\r\n\r\n// Компонент должен создавать DOM следующей структуры.\r\n\r\n// <li class=\"item\">\r\n//   <span class=\"status\"></span>\r\n//   <img class=\"avatar\" src=\"\" alt=\"User avatar\" width=\"48\" />\r\n//   <p class=\"name\"></p>\r\n// </li>\r\n\r\nimport PropTypes from \"prop-types\";\r\nimport FriendListItem from \"./FriendListItem\";\r\n\r\nconst FriendList = ({ friends }) => {\r\n  return (\r\n    <ul className=\"friend-list\">\r\n      {friends.map((friend) => (\r\n        <li key={friend.id} className=\"item\">\r\n          <FriendListItem\r\n            avatar={friend.avatar}\r\n            name={friend.name}\r\n            isOnline={friend.isOnline}\r\n          />\r\n        </li>\r\n      ))}\r\n    </ul>\r\n  );\r\n};\r\nFriendList.prototype = {\r\n  friends: PropTypes.arrayOf(\r\n    PropTypes.shape({ id: PropTypes.string.isRequired })\r\n  ),\r\n};\r\n\r\nexport default FriendList;\r\n","import \"./App.css\";\r\nimport Profile from \"./components/Profile/Profile\";\r\nimport user from \"./data/user.json\";\r\nimport friends from \"./data/friends.json\";\r\nimport FriendList from \"./components/FriendList/FriendList\";\r\n\r\nfunction App() {\r\n  return (\r\n    <div className=\"App\">\r\n      <header className=\"App-header\">\r\n        <Profile\r\n          username={user.username}\r\n          tag={user.tag}\r\n          location={user.location}\r\n          avatar={user.avatar}\r\n          stats={user.stats}\r\n        />\r\n        <FriendList friends={friends} />\r\n        {/* <img src={logo} className=\"App-logo\" alt=\"logo\" />\r\n        <p>\r\n          Edit <code>src/App.js</code> and save to reload.\r\n        </p>\r\n        <a\r\n          className=\"App-link\"\r\n          href=\"https://reactjs.org\"\r\n          target=\"_blank\"\r\n          rel=\"noopener noreferrer\"\r\n        >\r\n          Learn React\r\n        </a> */}\r\n      </header>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n\n"],"sourceRoot":""}