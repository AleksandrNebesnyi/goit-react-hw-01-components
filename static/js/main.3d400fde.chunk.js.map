{"version":3,"sources":["components/Profile/Profile.module.css","components/TransactionHistory/TransactionHistory.module.css","components/FriendListItem/FriendListItem.module.css","components/StatisticsItem/StatisticItem.module.css","components/Statistics/Statistics.module.css","components/TransactionItem/TransactionItem.module.css","components/FriendList/FriendList.module.css","components/Profile/Profile.jsx","components/FriendListItem/FriendListItem.jsx","components/FriendList/FriendList.jsx","components/StatisticsItem/StatisticsItem.jsx","components/Statistics/Statistics.jsx","components/TransactionItem/TransactionItem.jsx","components/TransactionHistory/TransactionHistory.jsx","App.js","index.js"],"names":["module","exports","Profile","username","tag","location","avatar","stats","className","s","profile","description","src","alt","name","item","label","quantity","followers","views","likes","FriendListItem","isOnline","id","online","offline","width","FriendList","friends","map","friend","prototype","PropTypes","arrayOf","shape","string","isRequired","StatisticsItem","percentage","number","Statistics","title","length","statistics","stat","defaultProps","TransactionItem","type","amount","currency","cell","TransactionHistory","items","transactions","App","user","data","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.3d400fde.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"profile\":\"Profile_profile__5MpD0\",\"description\":\"Profile_description__REQQ5\",\"avatar\":\"Profile_avatar__oOseG\",\"name\":\"Profile_name__3PA5j\",\"tag\":\"Profile_tag__9KY9E\",\"location\":\"Profile_location__2eD5b\",\"stats\":\"Profile_stats__kI5aj\",\"item\":\"Profile_item__fQF0b\",\"label\":\"Profile_label__1gE5R\",\"quantity\":\"Profile_quantity__Op5Z8\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"transaction-history\":\"TransactionHistory_transaction-history__vEznQ\",\"transaction-head\":\"TransactionHistory_transaction-head__2HVPE\",\"transaction-title\":\"TransactionHistory_transaction-title__y7QDM\",\"transaction-row\":\"TransactionHistory_transaction-row__3Outj\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"FriendListItem_item__1OT58\",\"status\":\"FriendListItem_status__1zJYd\",\"online\":\"FriendListItem_online__1HKUn FriendListItem_status__1zJYd\",\"offline\":\"FriendListItem_offline__2rRmX FriendListItem_status__1zJYd\",\"avatar\":\"FriendListItem_avatar__c3xsU\",\"name\":\"FriendListItem_name__2w7Vw\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"StatisticItem_item__1qYrM\",\"label\":\"StatisticItem_label__SEtCe\",\"percentage\":\"StatisticItem_percentage__1xBsh\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"statistics\":\"Statistics_statistics__2wWtZ\",\"title\":\"Statistics_title__2mXBU\",\"stat-list\":\"Statistics_stat-list__3-JWy\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"cell\":\"TransactionItem_cell__DxF06\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"friend-list\":\"FriendList_friend-list__1PTJW\"};","// Компонент должен принимать несколько пропсов с информацией о пользователе:\r\n\r\n// username — имя пользователя\r\n// tag — тег в социальной сети без @\r\n// location — город и страна\r\n// avatar — ссылка на изображение\r\n// stats — объект с информацией об активности\r\n// Компонент должен создавать DOM элемент следующей структуры.\r\n\r\nimport PropTypes from \"prop-types\";\r\nimport s from './Profile.module.css'\r\n\r\nconst Profile = ({ username, tag, location, avatar, stats }) => {\r\n  return (\r\n    <div className={s.profile}>\r\n      <div className={s.description}>\r\n        <img src={avatar} alt=\"User avatar\" className={s.avatar} />\r\n        <p className={s.name}>{username}</p>\r\n        <p className={s.tag}>@{tag}</p>\r\n        <p className={s.location}>{location}</p>\r\n      </div>\r\n\r\n      <ul className={s.stats}>\r\n        <li className={s.item}>\r\n          <span className={s.label}>Followers</span>\r\n          <span className={s.quantity}>{stats.followers}</span>\r\n        </li>\r\n        <li className={s.item}> \r\n          <span className={s.label}>Views</span>\r\n          <span className={s.quantity}>{stats.views}</span>\r\n        </li>\r\n        <li className={s.item}>\r\n          <span className={s.label}>Likes</span>\r\n          <span className={s.quantity}>{stats.likes}</span>\r\n        </li>\r\n      </ul>\r\n    </div>\r\n  );\r\n};\r\n\r\nProfile.propTypes = {\r\n  avatar: PropTypes.string,\r\n  username: PropTypes.string.isRequired,\r\n  tag: PropTypes.string.isRequired,\r\n  location: PropTypes.string.isRequired,\r\n  stats: PropTypes.objectOf(PropTypes.number).isRequired,\r\n};\r\n\r\nexport default Profile;\r\n","import PropTypes from \"prop-types\";\r\nimport s from \"./FriendListItem.module.css\";\r\n\r\nconst FriendListItem = ({ avatar, name, isOnline, id }) => (\r\n  <li key={id} className={s.item}>\r\n    <span className={isOnline ? s.online : s.offline}></span>\r\n    <img className={s.avatar} src={avatar} alt={name} width=\"60\" />\r\n    <p className={s.name}>{name}</p>\r\n  </li>\r\n);\r\n\r\nFriendListItem.propTypes = {\r\n  avatar: PropTypes.string,\r\n  name: PropTypes.string.isRequired,\r\n  isOnline: PropTypes.bool,\r\n};\r\n\r\nexport default FriendListItem;\r\n","// Компонент должен принимать один проп friends - массив объектов друзей.\r\n\r\n// Компонент должен создавать DOM следующей структуры.\r\n\r\n// <ul class=\"friend-list\">\r\n//   <!-- Произвольное кол-во FriendListItem -->\r\n// </ul>\r\n// Описание компонента <FriendListItem>\r\n// Компонент должен принимать несколько пропов:\r\n\r\n// avatar - ссылка на аватар\r\n// name - имя друга\r\n// isOnline - буль сигнализирующий о состоянии друга, в сети или нет.\r\n// В зависимости от пропа isOnline, должен меняться цвет фона span.status. Это можно сделать через разный CSS-класс или Styled Components.\r\n\r\n// Компонент должен создавать DOM следующей структуры.\r\n\r\n// <li class=\"item\">\r\n//   <span class=\"status\"></span>\r\n//   <img class=\"avatar\" src=\"\" alt=\"User avatar\" width=\"48\" />\r\n//   <p class=\"name\"></p>\r\n// </li>\r\n\r\nimport PropTypes from \"prop-types\";\r\nimport FriendListItem from \"../FriendListItem/FriendListItem\";\r\nimport s from \"./FriendList.module.css\";\r\n\r\nconst FriendList = ({ friends }) => {\r\n  return (\r\n    <ul className={s[\"friend-list\"]}>\r\n      {friends.map((friend) => (\r\n        <FriendListItem\r\n          id={friend.id}\r\n          avatar={friend.avatar}\r\n          name={friend.name}\r\n          isOnline={friend.isOnline}\r\n        />\r\n      ))}\r\n    </ul>\r\n  );\r\n};\r\n\r\nFriendList.prototype = {\r\n  friends: PropTypes.arrayOf(\r\n    PropTypes.shape({ id: PropTypes.string.isRequired })\r\n  ),\r\n};\r\n\r\nexport default FriendList;\r\n","// Компонент должен принимать два пропа title и stats, в которых указывается заголовок и объект статистики.\r\n\r\n// title - не обязателен, и если он не передан, не должна рендериться разметка заголовка <h2>.\r\n// stats - массив объектов содержащих информацию о элементе статистики. Может иметь произвольное кол-во элементов.\r\n// Цвет фона элемента статистики в оформлении можно пропустить, либо создать функцию для генерации случайного цвета.\r\n// Компонент должен создавать DOM элемент следующей структуры.\r\n\r\nimport PropTypes from \"prop-types\";\r\nimport s from \"./StatisticItem.module.css\";\r\nconst StatisticsItem = ({ label, percentage, id }) => {\r\n  return (\r\n    <li key={id} className={s.item}>\r\n      <span className={s.label}>{label}</span>\r\n      <span className={s.percentage}>{percentage}%</span>\r\n    </li>\r\n  );\r\n};\r\n\r\nStatisticsItem.prototype = {\r\n  id: PropTypes.string,\r\n  label: PropTypes.string,\r\n  percentage: PropTypes.number,\r\n};\r\n\r\nexport default StatisticsItem;\r\n","import PropTypes from \"prop-types\";\r\nimport StatisticsItem from \"../StatisticsItem/StatisticsItem\";\r\nimport s from \"./Statistics.module.css\";\r\n\r\nconst Statistics = ({ stats, title }) => {\r\n  if (stats.length === 0) return null;\r\n  return (\r\n    <section className={s.statistics}>\r\n      {title && <h2 className={s.title}>{title}</h2>}\r\n\r\n      <ul className={s[\"stat-list\"]}>\r\n        {stats.map((stat) => (\r\n          <StatisticsItem\r\n            id={stat.id}\r\n            label={stat.label}\r\n            percentage={stat.percentage}\r\n          />\r\n        ))}\r\n      </ul>\r\n    </section>\r\n  );\r\n};\r\n\r\nStatistics.defaultProps = {\r\n  stats: [],\r\n};\r\n\r\nStatistics.propTypes = {\r\n  title: PropTypes.string,\r\n  stats: PropTypes.array.isRequired,\r\n};\r\n\r\nexport default Statistics;\r\n","// Данные для списка доступны в формате JSON в файле transactions.json. Это массив объектов, каждый объект описывает одну транзакцию со следующими свойствами:\r\n\r\n// id — уникальный идентификатор транзакции\r\n// type — тип транзакции\r\n// amount - сумма транзакции\r\n// currency - тип валюты\r\n\r\n\r\n\r\n// Необходимо создать компонент <TransactionHistory> принимающий один проп items - массив объектов транзакций из transactions.json. Компонент создает разметку таблицы. Каждая транзакция это строка таблицы. В примере приведена разметка двух транзакций.\r\n\r\n\r\n// Пример использования\r\n// import transactions from 'путь/к/transactions.json';\r\n\r\n// <TransactionHistory items={transactions} />;\r\nimport PropTypes from \"prop-types\";\r\nimport s from './TransactionItem.module.css'\r\n\r\n\r\nconst TransactionItem =({id, type, amount, currency}) => {\r\n    return (\r\n        \r\n        < >\r\n          <td className={s.cell}>{type}</td>\r\n          <td className={s.cell}>{amount}</td>\r\n          <td className={s.cell}>{currency}</td>\r\n        </>\r\n      \r\n\r\n);} \r\n\r\nTransactionItem.prototype ={\r\n    id: PropTypes.string,\r\n    type: PropTypes.string,\r\n    amount :PropTypes.string,\r\n    currency:PropTypes.string,\r\n};\r\n\r\n\r\n\r\nexport default TransactionItem;","import PropTypes from \"prop-types\";\r\nimport TransactionItem from \"../TransactionItem/TransactionItem\";\r\nimport s from \"./TransactionHistory.module.css\";\r\n\r\nconst TransactionHistory = ({ items }) => {\r\n  if (items.length === 0) return null;\r\n  return (\r\n    <table className={s[\"transaction-history\"]}>\r\n      <thead className={s[\"transaction-head\"]}>\r\n        <tr>\r\n          <th className={s[\"transaction-title\"]}>Type</th>\r\n          <th className={s[\"transaction-title\"]}>Amount</th>\r\n          <th className={s[\"transaction-title\"]}>Currency</th>\r\n        </tr>\r\n      </thead>\r\n      <tbody>\r\n        {items.map((item) => (\r\n          <tr key={item.id} className={s[\"transaction-row\"]}>\r\n            <TransactionItem\r\n              id={items.id}\r\n              type={item.type}\r\n              amount={item.amount}\r\n              currency={item.currency}\r\n            />\r\n          </tr>\r\n        ))}\r\n      </tbody>\r\n    </table>\r\n  );\r\n};\r\n\r\nTransactionHistory.defaultProps = {\r\n  transactions: [],\r\n};\r\n\r\nTransactionHistory.propTypes = {\r\n  transactions: PropTypes.array.isRequired,\r\n};\r\n\r\nexport default TransactionHistory;\r\n","import \"./App.css\";\r\n\r\nimport user from \"./data/user.json\";\r\nimport Profile from \"./components/Profile/Profile\";\r\n\r\nimport friends from \"./data/friends.json\";\r\nimport FriendList from \"./components/FriendList/FriendList\";\r\n\r\nimport data from './data/data.json'\r\nimport Statistics from './components/Statistics/Statistics'\r\n\r\nimport transactions from './data/transactions.json'\r\nimport TransactionHistory from './components/TransactionHistory/TransactionHistory'\r\n\r\n\r\nfunction App() {\r\n  return (\r\n    <div className=\"App\">\r\n      <header className=\"App-header\">\r\n        <Profile\r\n          username={user.username}\r\n          tag={user.tag}\r\n          location={user.location}\r\n          avatar={user.avatar}\r\n          stats={user.stats}\r\n        />\r\n        <FriendList friends={friends} />\r\n\r\n         <Statistics title=\"Upload stats\" stats={data} />\r\n         <Statistics stats={data} />\r\n\r\n         <TransactionHistory items={transactions} />\r\n\r\n      \r\n      </header>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\n\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n\r\n"],"sourceRoot":""}